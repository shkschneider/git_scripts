#!/bin/bash
#
# git-amend -- change an author on git commits
# Copyright (C) 2012  Alan SCHNEIDER
#                     <shk.schneider[at]gmail.com>
#
# From <http://stackoverflow.com/questions/750172/how-do-i-change-the-author-of-a-commit-in-git>
#
# This program comes with ABSOLUTELY NO WARRANTY.
# This is free software, and you are welcome to redistribute it
# under certain conditions.
#

[ -z "`which git`" ] && echo "git-amend: command 'git' not found" >&2 && exit 1

function usage() {
    echo "Usage: git-amend [-a|--all]" >&2
    exit 1
}

dir=$(git rev-parse --git-dir 2>/dev/null)
[ -z "$dir" ] && echo "git-amend: not a git repository" >&2 && exit 1

[ $# -gt 1 ] && usage

case $1 in
    "")
	echo "I: This script will only affect the last commit"
	echo "I: last author was: "$(git log -n 1 | sed -n '2p' | cut -d' ' -f2-)
	echo -n "New Author Name: "
	read new_name
	[ -z "$new_name" ] && echo "Canceled" && exit 1
	echo -n "New Author Email: "
	read new_email
	[ -z "$new_email" ] && echo "Canceled" && exit 1
	git commit --amend --author="$new_name <$new_email>"
	echo "W: commiter's name is still unchanged for futur commits"
	;;
    "-a"|"--all")
	echo "W: this script will affect ALL commits"
	echo "I: last author was: "$(git log -n 1 | sed -n '2p' | cut -d' ' -f2-)
	echo -n "Old Author Name: "
	read old_name
	[ -z "$old_name" ] && echo "Canceled" && exit 1
	echo -n "New Author Name: "
	read new_name
	[ -z "$new_name" ] && echo "Canceled" && exit 1
	echo -n "New Author Email: "
	read new_email
	[ -z "$new_email" ] && echo "Canceled" && exit 1
	git filter-branch -f --commit-filter '
          if [ "$GIT_COMMITTER_NAME" = "$old_name" ];
          then
                  GIT_COMMITTER_NAME="$new_name";
                  GIT_AUTHOR_NAME="$new_name";
                  GIT_COMMITTER_EMAIL="$new_email";
                  GIT_AUTHOR_EMAIL="$new_email";
                  git commit-tree "$@";
          else
                  git commit-tree "$@";
          fi' HEAD
	echo "W: commiter's name is still unchanged for futur commits"
	;;
    *) usage ;;
esac

# EOF
