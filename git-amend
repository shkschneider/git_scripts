#!/bin/bash
#
# git-amend -- change an author on git commits
# Copyright (C) 2012-2014  Alan SCHNEIDER
#                          <shk.schneider[at]gmail.com>
#
# From <http://stackoverflow.com/questions/750172/how-do-i-change-the-author-of-a-commit-in-git>
#      <https://gist.githubusercontent.com/octocat/0831f3fbd83ac4d46451/raw/git-author-rewrite.sh>
#
# This program comes with ABSOLUTELY NO WARRANTY.
# This is free software, and you are welcome to redistribute it
# under certain conditions.
#

[ -z "`which git`" ] && echo "git-amend: command 'git' not found" >&2 && exit 1

function usage() {
    echo "Usage: git-amend [-a|--all]" >&2
    exit 1
}

dir=$(git rev-parse --git-dir 2>/dev/null)
[ -z "$dir" ] && echo "git-amend: not a git repository" >&2 && exit 1

[ $# -gt 1 ] && usage

case $1 in
    "")
	echo "I: This script will only affect the last commit"
	echo "I: last author was: "$(git log -n 1 | sed -n '2p' | cut -d' ' -f2-)
	echo -n "New Author Name: "
	read new_name
	[ -z "$new_name" ] && echo "Canceled" && exit 1
	echo -n "New Author Email: "
	read new_email
	[ -z "$new_email" ] && echo "Canceled" && exit 1
	git commit --amend --author="$new_name <$new_email>"
	echo "W: commiter's name is still unchanged for futur commits"
	;;
    "-a"|"--all")
	echo "W: this script will affect ALL commits"
	echo "I: last author was: "$(git log -n 1 | sed -n '2p' | cut -d' ' -f2-)
	echo -n "Old Author Email: "
	read old_email
	[ -z "$old_email" ] && echo "Canceled" && exit 1
	echo -n "New Author Name: "
	read new_name
	[ -z "$new_name" ] && echo "Canceled" && exit 1
	echo -n "New Author Email: "
	read new_email
	[ -z "$new_email" ] && echo "Canceled" && exit 1
        git filter-branch --env-filter '
                OLD_EMAIL="$old_email"
                CORRECT_NAME="$new_name"
                CORRECT_EMAIL="$new_email"
                if [ "$GIT_COMMITTER_EMAIL" = "$OLD_EMAIL" ] ; then
                        export GIT_COMMITTER_NAME="$CORRECT_NAME"
                        export GIT_COMMITTER_EMAIL="$CORRECT_EMAIL"
                fi
                if [ "$GIT_AUTHOR_EMAIL" = "$OLD_EMAIL" ] ; then
                        export GIT_AUTHOR_NAME="$CORRECT_NAME"
                        export GIT_AUTHOR_EMAIL="$CORRECT_EMAIL"
                fi' \
                --tag-name-filter cat -- --branches --tags
	echo "W: commiter's name is still unchanged for futur commits"
        echo "I: use git config [--global] user.name/user.email for that"
	;;
    *) usage ;;
esac

# EOF
